// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopologyDiagram component 1 renders as expected 1`] = `
<div
  className="bx--loading content-spinner"
>
  <svg
    className="bx--loading__svg"
    viewBox="-75 -75 150 150"
  >
    <circle
      cx="0"
      cy="0"
      r="37.5"
    />
  </svg>
</div>
`;

exports[`TopologyDiagram component 2 renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TopologyDiagram
    clusters={
      Array [
        Object {
          "id": "this_is_id",
          "name": "name",
        },
      ]
    }
    links={
      Array [
        Object {
          "label": "link",
          "source": 2,
          "target": 3,
          "type": "link",
        },
      ]
    }
    nodes={
      Array [
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "5b0ef443663e4b001bb7e198",
          "name": "toronto",
          "namespace": null,
          "topology": "cluster",
          "type": "cluster",
          "uid": "toronto",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "2",
          "name": "2",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "2",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "3",
          "name": "3",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "3",
        },
      ]
    }
    onSelectedNodeChange={[MockFunction]}
    selectedNodeId={undefined}
    status="DONE"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <svg
          className="topologyDiagram"
        />,
        <input
          alt="zoom-in"
          className="zoom-in"
          onClick={[Function]}
          src="undefined/graphics/zoom-in.svg"
          type="image"
        />,
        <input
          alt="zoom-out"
          className="zoom-out"
          onClick={[Function]}
          src="undefined/graphics/zoom-out.svg"
          type="image"
        />,
        <input
          alt="zoom-target"
          className="zoom-target"
          onClick={[Function]}
          src="undefined/graphics/zoom-center.svg"
          type="image"
        />,
      ],
      "className": "topologyDiagramContainer",
    },
    "ref": [Function],
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "topologyDiagram",
        },
        "ref": null,
        "rendered": null,
        "type": "svg",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "zoom-in",
          "className": "zoom-in",
          "onClick": [Function],
          "src": "undefined/graphics/zoom-in.svg",
          "type": "image",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "zoom-out",
          "className": "zoom-out",
          "onClick": [Function],
          "src": "undefined/graphics/zoom-out.svg",
          "type": "image",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "zoom-target",
          "className": "zoom-target",
          "onClick": [Function],
          "src": "undefined/graphics/zoom-center.svg",
          "type": "image",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <svg
            className="topologyDiagram"
          />,
          <input
            alt="zoom-in"
            className="zoom-in"
            onClick={[Function]}
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />,
          <input
            alt="zoom-out"
            className="zoom-out"
            onClick={[Function]}
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />,
          <input
            alt="zoom-target"
            className="zoom-target"
            onClick={[Function]}
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />,
        ],
        "className": "topologyDiagramContainer",
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "topologyDiagram",
          },
          "ref": null,
          "rendered": null,
          "type": "svg",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-in",
            "className": "zoom-in",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-in.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-out",
            "className": "zoom-out",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-out.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-target",
            "className": "zoom-target",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-center.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`TopologyDiagram component 3 renders as expected 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <TopologyDiagram
    clusters={
      Array [
        Object {
          "id": "this_is_id",
          "name": "name",
        },
      ]
    }
    links={
      Array [
        Object {
          "label": "link",
          "source": 2,
          "target": 3,
          "type": "link",
        },
      ]
    }
    nodes={
      Array [
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "5b0ef443663e4b001bb7e198",
          "name": "toronto",
          "namespace": null,
          "topology": "cluster",
          "type": "cluster",
          "uid": "toronto",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "2",
          "name": "2",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "2",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "3",
          "name": "3",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "3",
        },
      ]
    }
    onSelectedNodeChange={[MockFunction]}
    selectedNodeId={undefined}
    status="DONE"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": TopologyDiagram {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "clusters": Array [
                      Object {
                        "id": "this_is_id",
                        "name": "name",
                      },
                    ],
                    "links": Array [
                      Object {
                        "label": "link",
                        "source": 2,
                        "target": 3,
                        "type": "link",
                      },
                    ],
                    "nodes": Array [
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "5b0ef443663e4b001bb7e198",
                        "name": "toronto",
                        "namespace": null,
                        "topology": "cluster",
                        "type": "cluster",
                        "uid": "toronto",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "2",
                        "name": "2",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "2",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "3",
                        "name": "3",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "3",
                      },
                    ],
                    "onSelectedNodeChange": [MockFunction],
                    "selectedNodeId": undefined,
                    "status": "DONE",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "memoizedProps": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "clusters": Array [
                      Object {
                        "id": "this_is_id",
                        "name": "name",
                      },
                    ],
                    "links": Array [
                      Object {
                        "label": "link",
                        "source": 2,
                        "target": 3,
                        "type": "link",
                      },
                    ],
                    "nodes": Array [
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "5b0ef443663e4b001bb7e198",
                        "name": "toronto",
                        "namespace": null,
                        "topology": "cluster",
                        "type": "cluster",
                        "uid": "toronto",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "2",
                        "name": "2",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "2",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "3",
                        "name": "3",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "3",
                      },
                    ],
                    "onSelectedNodeChange": [MockFunction],
                    "selectedNodeId": undefined,
                    "status": "DONE",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "containerRef": <div
        class="topologyDiagramContainer"
      >
        <svg
          class="topologyDiagram"
        />
        <input
          alt="zoom-in"
          class="zoom-in"
          src="undefined/graphics/zoom-in.svg"
          type="image"
        />
        <input
          alt="zoom-out"
          class="zoom-out"
          src="undefined/graphics/zoom-out.svg"
          type="image"
        />
        <input
          alt="zoom-target"
          class="zoom-target"
          src="undefined/graphics/zoom-center.svg"
          type="image"
        />
      </div>,
      "context": Object {},
      "generateDiagram": [Function],
      "handleNodeClick": [Function],
      "handleTarget": [Function],
      "handleZoomIn": [Function],
      "handleZoomOut": [Function],
      "props": Object {
        "clusters": Array [
          Object {
            "id": "this_is_id",
            "name": "name",
          },
        ],
        "links": Array [
          Object {
            "label": "link",
            "source": 2,
            "target": 3,
            "type": "link",
          },
        ],
        "nodes": Array [
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "5b0ef443663e4b001bb7e198",
            "name": "toronto",
            "namespace": null,
            "topology": "cluster",
            "type": "cluster",
            "uid": "toronto",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "2",
            "name": "2",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "2",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "3",
            "name": "3",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "3",
          },
        ],
        "onSelectedNodeChange": [MockFunction],
        "selectedNodeId": undefined,
        "status": "DONE",
      },
      "refs": Object {},
      "setContainerRef": [Function],
      "simulationHelper": SimulationHelper {
        "createSimulation": [Function],
        "getSimulation": [Function],
        "stopSimulations": [Function],
      },
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "clusters": Array [
        Object {
          "id": "this_is_id",
          "name": "name",
        },
      ],
      "links": Array [
        Object {
          "label": "link",
          "source": 2,
          "target": 3,
          "type": "link",
        },
      ],
      "nodes": Array [
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "5b0ef443663e4b001bb7e198",
          "name": "toronto",
          "namespace": null,
          "topology": "cluster",
          "type": "cluster",
          "uid": "toronto",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "2",
          "name": "2",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "2",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "3",
          "name": "3",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "3",
        },
      ],
      "onSelectedNodeChange": [MockFunction],
      "selectedNodeId": undefined,
      "status": "DONE",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="topologyDiagramContainer"
      >
        <svg
          class="topologyDiagram"
        />
        <input
          alt="zoom-in"
          class="zoom-in"
          src="undefined/graphics/zoom-in.svg"
          type="image"
        />
        <input
          alt="zoom-out"
          class="zoom-out"
          src="undefined/graphics/zoom-out.svg"
          type="image"
        />
        <input
          alt="zoom-target"
          class="zoom-target"
          src="undefined/graphics/zoom-center.svg"
          type="image"
        />
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <svg
            className="topologyDiagram"
          />,
          <input
            alt="zoom-in"
            className="zoom-in"
            onClick={[Function]}
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />,
          <input
            alt="zoom-out"
            className="zoom-out"
            onClick={[Function]}
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />,
          <input
            alt="zoom-target"
            className="zoom-target"
            onClick={[Function]}
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />,
        ],
        "className": "topologyDiagramContainer",
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": <svg
            class="topologyDiagram"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "topologyDiagram",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "svg",
        },
        Object {
          "instance": <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-in",
            "className": "zoom-in",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-in.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
        Object {
          "instance": <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-out",
            "className": "zoom-out",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-out.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
        Object {
          "instance": <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-target",
            "className": "zoom-target",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-center.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": TopologyDiagram {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="topologyDiagramContainer"
                    >
                      <svg
                        class="topologyDiagram"
                      />
                      <input
                        alt="zoom-in"
                        class="zoom-in"
                        src="undefined/graphics/zoom-in.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "topologyDiagram",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": "topologyDiagram",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <input
                          alt="zoom-target"
                          class="zoom-target"
                          src="undefined/graphics/zoom-center.svg"
                          type="image"
                        />,
                        "tag": 5,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <svg
                    class="topologyDiagram"
                  />,
                  "tag": 5,
                  "type": "svg",
                  "updateQueue": null,
                },
                "effectTag": 128,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "ref": [Function],
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "clusters": Array [
                          Object {
                            "id": "this_is_id",
                            "name": "name",
                          },
                        ],
                        "links": Array [
                          Object {
                            "label": "link",
                            "source": 2,
                            "target": 3,
                            "type": "link",
                          },
                        ],
                        "nodes": Array [
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "5b0ef443663e4b001bb7e198",
                            "name": "toronto",
                            "namespace": null,
                            "topology": "cluster",
                            "type": "cluster",
                            "uid": "toronto",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "2",
                            "name": "2",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "2",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "3",
                            "name": "3",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "3",
                          },
                        ],
                        "onSelectedNodeChange": [MockFunction],
                        "selectedNodeId": undefined,
                        "status": "DONE",
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "clusters": Array [
              Object {
                "id": "this_is_id",
                "name": "name",
              },
            ],
            "links": Array [
              Object {
                "label": "link",
                "source": 2,
                "target": 3,
                "type": "link",
              },
            ],
            "nodes": Array [
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "5b0ef443663e4b001bb7e198",
                "name": "toronto",
                "namespace": null,
                "topology": "cluster",
                "type": "cluster",
                "uid": "toronto",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "2",
                "name": "2",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "2",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "3",
                "name": "3",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "3",
              },
            ],
            "onSelectedNodeChange": [MockFunction],
            "selectedNodeId": undefined,
            "status": "DONE",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "clusters": Array [
              Object {
                "id": "this_is_id",
                "name": "name",
              },
            ],
            "links": Array [
              Object {
                "label": "link",
                "source": 2,
                "target": 3,
                "type": "link",
              },
            ],
            "nodes": Array [
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "5b0ef443663e4b001bb7e198",
                "name": "toronto",
                "namespace": null,
                "topology": "cluster",
                "type": "cluster",
                "uid": "toronto",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "2",
                "name": "2",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "2",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "3",
                "name": "3",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "3",
              },
            ],
            "onSelectedNodeChange": [MockFunction],
            "selectedNodeId": undefined,
            "status": "DONE",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="topologyDiagramContainer"
                    >
                      <svg
                        class="topologyDiagram"
                      />
                      <input
                        alt="zoom-in"
                        class="zoom-in"
                        src="undefined/graphics/zoom-in.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "topologyDiagram",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": "topologyDiagram",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <input
                          alt="zoom-target"
                          class="zoom-target"
                          src="undefined/graphics/zoom-center.svg"
                          type="image"
                        />,
                        "tag": 5,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <svg
                    class="topologyDiagram"
                  />,
                  "tag": 5,
                  "type": "svg",
                  "updateQueue": null,
                },
                "effectTag": 128,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "ref": [Function],
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "clusters": Array [
                          Object {
                            "id": "this_is_id",
                            "name": "name",
                          },
                        ],
                        "links": Array [
                          Object {
                            "label": "link",
                            "source": 2,
                            "target": 3,
                            "type": "link",
                          },
                        ],
                        "nodes": Array [
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "5b0ef443663e4b001bb7e198",
                            "name": "toronto",
                            "namespace": null,
                            "topology": "cluster",
                            "type": "cluster",
                            "uid": "toronto",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "2",
                            "name": "2",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "2",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "3",
                            "name": "3",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "3",
                          },
                        ],
                        "onSelectedNodeChange": [MockFunction],
                        "selectedNodeId": undefined,
                        "status": "DONE",
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "containerRef": <div
          class="topologyDiagramContainer"
        >
          <svg
            class="topologyDiagram"
          />
          <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />
          <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />
          <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />
        </div>,
        "context": Object {},
        "generateDiagram": [Function],
        "handleNodeClick": [Function],
        "handleTarget": [Function],
        "handleZoomIn": [Function],
        "handleZoomOut": [Function],
        "props": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "refs": Object {},
        "setContainerRef": [Function],
        "simulationHelper": SimulationHelper {
          "createSimulation": [Function],
          "getSimulation": [Function],
          "stopSimulations": [Function],
        },
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "clusters": Array [
          Object {
            "id": "this_is_id",
            "name": "name",
          },
        ],
        "links": Array [
          Object {
            "label": "link",
            "source": 2,
            "target": 3,
            "type": "link",
          },
        ],
        "nodes": Array [
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "5b0ef443663e4b001bb7e198",
            "name": "toronto",
            "namespace": null,
            "topology": "cluster",
            "type": "cluster",
            "uid": "toronto",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "2",
            "name": "2",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "2",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "3",
            "name": "3",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "3",
          },
        ],
        "onSelectedNodeChange": [MockFunction],
        "selectedNodeId": undefined,
        "status": "DONE",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="topologyDiagramContainer"
        >
          <svg
            class="topologyDiagram"
          />
          <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />
          <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />
          <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <svg
              className="topologyDiagram"
            />,
            <input
              alt="zoom-in"
              className="zoom-in"
              onClick={[Function]}
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />,
            <input
              alt="zoom-out"
              className="zoom-out"
              onClick={[Function]}
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />,
            <input
              alt="zoom-target"
              className="zoom-target"
              onClick={[Function]}
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />,
          ],
          "className": "topologyDiagramContainer",
        },
        "ref": [Function],
        "rendered": Array [
          Object {
            "instance": <svg
              class="topologyDiagram"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "svg",
          },
          Object {
            "instance": <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-in",
              "className": "zoom-in",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-in.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-out",
              "className": "zoom-out",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-out.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-target",
              "className": "zoom-target",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-center.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`TopologyDiagram component 3 renders as expected 2`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <TopologyDiagram
    clusters={
      Array [
        Object {
          "id": "this_is_id",
          "name": "name",
        },
      ]
    }
    links={
      Array [
        Object {
          "label": "link",
          "source": 2,
          "target": 3,
          "type": "link",
        },
      ]
    }
    nodes={
      Array [
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "5b0ef443663e4b001bb7e198",
          "name": "toronto",
          "namespace": null,
          "topology": "cluster",
          "type": "cluster",
          "uid": "toronto",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "2",
          "name": "2",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "2",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "3",
          "name": "3",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "3",
        },
      ]
    }
    onSelectedNodeChange={[MockFunction]}
    selectedNodeId={undefined}
    status="DONE"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": TopologyDiagram {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "clusters": Array [
                      Object {
                        "id": "this_is_id",
                        "name": "name",
                      },
                    ],
                    "links": Array [
                      Object {
                        "label": "link",
                        "source": 2,
                        "target": 3,
                        "type": "link",
                      },
                    ],
                    "nodes": Array [
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "5b0ef443663e4b001bb7e198",
                        "name": "toronto",
                        "namespace": null,
                        "topology": "cluster",
                        "type": "cluster",
                        "uid": "toronto",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "2",
                        "name": "2",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "2",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "3",
                        "name": "3",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "3",
                      },
                    ],
                    "onSelectedNodeChange": [MockFunction],
                    "selectedNodeId": undefined,
                    "status": "DONE",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 5,
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "topologyDiagram",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "zoom-in",
                "className": "zoom-in",
                "onClick": [Function],
                "src": "undefined/graphics/zoom-in.svg",
                "type": "image",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-out",
                  "className": "zoom-out",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-out.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-target",
                    "className": "zoom-target",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-center.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              "tag": 5,
              "type": "input",
              "updateQueue": null,
            },
            "stateNode": <svg
              class="topologyDiagram"
            />,
            "tag": 5,
            "type": "svg",
            "updateQueue": null,
          },
          "effectTag": 128,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <svg
                className="topologyDiagram"
              />,
              <input
                alt="zoom-in"
                className="zoom-in"
                onClick={[Function]}
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />,
              <input
                alt="zoom-out"
                className="zoom-out"
                onClick={[Function]}
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />,
              <input
                alt="zoom-target"
                className="zoom-target"
                onClick={[Function]}
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />,
            ],
            "className": "topologyDiagramContainer",
          },
          "ref": [Function],
          "return": [Circular],
          "sibling": null,
          "stateNode": <div
            class="topologyDiagramContainer"
          >
            <svg
              class="topologyDiagram"
            />
            <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />
            <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />
            <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />
          </div>,
          "tag": 5,
          "type": "div",
          "updateQueue": null,
        },
        "memoizedProps": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "clusters": Array [
                Object {
                  "id": "this_is_id",
                  "name": "name",
                },
              ],
              "links": Array [
                Object {
                  "label": "link",
                  "source": 2,
                  "target": 3,
                  "type": "link",
                },
              ],
              "nodes": Array [
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "5b0ef443663e4b001bb7e198",
                  "name": "toronto",
                  "namespace": null,
                  "topology": "cluster",
                  "type": "cluster",
                  "uid": "toronto",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "2",
                  "name": "2",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "2",
                },
                Object {
                  "__typename": "Resource",
                  "cluster": null,
                  "id": "3",
                  "name": "3",
                  "namespace": null,
                  "topology": "service",
                  "type": "service",
                  "uid": "3",
                },
              ],
              "onSelectedNodeChange": [MockFunction],
              "selectedNodeId": undefined,
              "status": "DONE",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "clusters": Array [
                            Object {
                              "id": "this_is_id",
                              "name": "name",
                            },
                          ],
                          "links": Array [
                            Object {
                              "label": "link",
                              "source": 2,
                              "target": 3,
                              "type": "link",
                            },
                          ],
                          "nodes": Array [
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "5b0ef443663e4b001bb7e198",
                              "name": "toronto",
                              "namespace": null,
                              "topology": "cluster",
                              "type": "cluster",
                              "uid": "toronto",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "2",
                              "name": "2",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "2",
                            },
                            Object {
                              "__typename": "Resource",
                              "cluster": null,
                              "id": "3",
                              "name": "3",
                              "namespace": null,
                              "topology": "service",
                              "type": "service",
                              "uid": "3",
                            },
                          ],
                          "onSelectedNodeChange": [MockFunction],
                          "selectedNodeId": undefined,
                          "status": "DONE",
                        }
                      }
                    />,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "clusters": Array [
                      Object {
                        "id": "this_is_id",
                        "name": "name",
                      },
                    ],
                    "links": Array [
                      Object {
                        "label": "link",
                        "source": 2,
                        "target": 3,
                        "type": "link",
                      },
                    ],
                    "nodes": Array [
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "5b0ef443663e4b001bb7e198",
                        "name": "toronto",
                        "namespace": null,
                        "topology": "cluster",
                        "type": "cluster",
                        "uid": "toronto",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "2",
                        "name": "2",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "2",
                      },
                      Object {
                        "__typename": "Resource",
                        "cluster": null,
                        "id": "3",
                        "name": "3",
                        "namespace": null,
                        "topology": "service",
                        "type": "service",
                        "uid": "3",
                      },
                    ],
                    "onSelectedNodeChange": [MockFunction],
                    "selectedNodeId": undefined,
                    "status": "DONE",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "containerRef": <div
        class="topologyDiagramContainer"
      >
        <svg
          class="topologyDiagram"
        />
        <input
          alt="zoom-in"
          class="zoom-in"
          src="undefined/graphics/zoom-in.svg"
          type="image"
        />
        <input
          alt="zoom-out"
          class="zoom-out"
          src="undefined/graphics/zoom-out.svg"
          type="image"
        />
        <input
          alt="zoom-target"
          class="zoom-target"
          src="undefined/graphics/zoom-center.svg"
          type="image"
        />
      </div>,
      "context": Object {},
      "generateDiagram": [Function],
      "handleNodeClick": [Function],
      "handleTarget": [Function],
      "handleZoomIn": [Function],
      "handleZoomOut": [Function],
      "props": Object {
        "clusters": Array [
          Object {
            "id": "this_is_id",
            "name": "name",
          },
        ],
        "links": Array [
          Object {
            "label": "link",
            "source": 2,
            "target": 3,
            "type": "link",
          },
        ],
        "nodes": Array [
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "5b0ef443663e4b001bb7e198",
            "name": "toronto",
            "namespace": null,
            "topology": "cluster",
            "type": "cluster",
            "uid": "toronto",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "2",
            "name": "2",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "2",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "3",
            "name": "3",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "3",
          },
        ],
        "onSelectedNodeChange": [MockFunction],
        "selectedNodeId": undefined,
        "status": "DONE",
      },
      "refs": Object {},
      "setContainerRef": [Function],
      "simulationHelper": SimulationHelper {
        "createSimulation": [Function],
        "getSimulation": [Function],
        "stopSimulations": [Function],
      },
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "clusters": Array [
        Object {
          "id": "this_is_id",
          "name": "name",
        },
      ],
      "links": Array [
        Object {
          "label": "link",
          "source": 2,
          "target": 3,
          "type": "link",
        },
      ],
      "nodes": Array [
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "5b0ef443663e4b001bb7e198",
          "name": "toronto",
          "namespace": null,
          "topology": "cluster",
          "type": "cluster",
          "uid": "toronto",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "2",
          "name": "2",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "2",
        },
        Object {
          "__typename": "Resource",
          "cluster": null,
          "id": "3",
          "name": "3",
          "namespace": null,
          "topology": "service",
          "type": "service",
          "uid": "3",
        },
      ],
      "onSelectedNodeChange": [MockFunction],
      "selectedNodeId": undefined,
      "status": "DONE",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="topologyDiagramContainer"
      >
        <svg
          class="topologyDiagram"
        />
        <input
          alt="zoom-in"
          class="zoom-in"
          src="undefined/graphics/zoom-in.svg"
          type="image"
        />
        <input
          alt="zoom-out"
          class="zoom-out"
          src="undefined/graphics/zoom-out.svg"
          type="image"
        />
        <input
          alt="zoom-target"
          class="zoom-target"
          src="undefined/graphics/zoom-center.svg"
          type="image"
        />
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <svg
            className="topologyDiagram"
          />,
          <input
            alt="zoom-in"
            className="zoom-in"
            onClick={[Function]}
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />,
          <input
            alt="zoom-out"
            className="zoom-out"
            onClick={[Function]}
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />,
          <input
            alt="zoom-target"
            className="zoom-target"
            onClick={[Function]}
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />,
        ],
        "className": "topologyDiagramContainer",
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": <svg
            class="topologyDiagram"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "topologyDiagram",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "svg",
        },
        Object {
          "instance": <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-in",
            "className": "zoom-in",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-in.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
        Object {
          "instance": <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-out",
            "className": "zoom-out",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-out.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
        Object {
          "instance": <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "zoom-target",
            "className": "zoom-target",
            "onClick": [Function],
            "src": "undefined/graphics/zoom-center.svg",
            "type": "image",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": TopologyDiagram {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="topologyDiagramContainer"
                    >
                      <svg
                        class="topologyDiagram"
                      />
                      <input
                        alt="zoom-in"
                        class="zoom-in"
                        src="undefined/graphics/zoom-in.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "topologyDiagram",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": "topologyDiagram",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <input
                          alt="zoom-target"
                          class="zoom-target"
                          src="undefined/graphics/zoom-center.svg"
                          type="image"
                        />,
                        "tag": 5,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <svg
                    class="topologyDiagram"
                  />,
                  "tag": 5,
                  "type": "svg",
                  "updateQueue": null,
                },
                "effectTag": 128,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "ref": [Function],
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "clusters": Array [
                          Object {
                            "id": "this_is_id",
                            "name": "name",
                          },
                        ],
                        "links": Array [
                          Object {
                            "label": "link",
                            "source": 2,
                            "target": 3,
                            "type": "link",
                          },
                        ],
                        "nodes": Array [
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "5b0ef443663e4b001bb7e198",
                            "name": "toronto",
                            "namespace": null,
                            "topology": "cluster",
                            "type": "cluster",
                            "uid": "toronto",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "2",
                            "name": "2",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "2",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "3",
                            "name": "3",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "3",
                          },
                        ],
                        "onSelectedNodeChange": [MockFunction],
                        "selectedNodeId": undefined,
                        "status": "DONE",
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 5,
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "topologyDiagram",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "topologyDiagram",
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "zoom-in",
                  "className": "zoom-in",
                  "onClick": [Function],
                  "src": "undefined/graphics/zoom-in.svg",
                  "type": "image",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-out",
                    "className": "zoom-out",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-out.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-target",
                      "className": "zoom-target",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-center.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                "tag": 5,
                "type": "input",
                "updateQueue": null,
              },
              "stateNode": <svg
                class="topologyDiagram"
              />,
              "tag": 5,
              "type": "svg",
              "updateQueue": null,
            },
            "effectTag": 128,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <svg
                  className="topologyDiagram"
                />,
                <input
                  alt="zoom-in"
                  className="zoom-in"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />,
                <input
                  alt="zoom-out"
                  className="zoom-out"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />,
                <input
                  alt="zoom-target"
                  className="zoom-target"
                  onClick={[Function]}
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />,
              ],
              "className": "topologyDiagramContainer",
            },
            "ref": [Function],
            "return": [Circular],
            "sibling": null,
            "stateNode": <div
              class="topologyDiagramContainer"
            >
              <svg
                class="topologyDiagram"
              />
              <input
                alt="zoom-in"
                class="zoom-in"
                src="undefined/graphics/zoom-in.svg"
                type="image"
              />
              <input
                alt="zoom-out"
                class="zoom-out"
                src="undefined/graphics/zoom-out.svg"
                type="image"
              />
              <input
                alt="zoom-target"
                class="zoom-target"
                src="undefined/graphics/zoom-center.svg"
                type="image"
              />
            </div>,
            "tag": 5,
            "type": "div",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "clusters": Array [
              Object {
                "id": "this_is_id",
                "name": "name",
              },
            ],
            "links": Array [
              Object {
                "label": "link",
                "source": 2,
                "target": 3,
                "type": "link",
              },
            ],
            "nodes": Array [
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "5b0ef443663e4b001bb7e198",
                "name": "toronto",
                "namespace": null,
                "topology": "cluster",
                "type": "cluster",
                "uid": "toronto",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "2",
                "name": "2",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "2",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "3",
                "name": "3",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "3",
              },
            ],
            "onSelectedNodeChange": [MockFunction],
            "selectedNodeId": undefined,
            "status": "DONE",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "clusters": Array [
              Object {
                "id": "this_is_id",
                "name": "name",
              },
            ],
            "links": Array [
              Object {
                "label": "link",
                "source": 2,
                "target": 3,
                "type": "link",
              },
            ],
            "nodes": Array [
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "5b0ef443663e4b001bb7e198",
                "name": "toronto",
                "namespace": null,
                "topology": "cluster",
                "type": "cluster",
                "uid": "toronto",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "2",
                "name": "2",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "2",
              },
              Object {
                "__typename": "Resource",
                "cluster": null,
                "id": "3",
                "name": "3",
                "namespace": null,
                "topology": "service",
                "type": "service",
                "uid": "3",
              },
            ],
            "onSelectedNodeChange": [MockFunction],
            "selectedNodeId": undefined,
            "status": "DONE",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 7,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "topologyDiagram",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "topologyDiagram",
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 8,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "alt": "zoom-in",
                    "className": "zoom-in",
                    "onClick": [Function],
                    "src": "undefined/graphics/zoom-in.svg",
                    "type": "image",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 9,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-out",
                      "className": "zoom-out",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-out.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 10,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-target",
                        "className": "zoom-target",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-center.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  "tag": 5,
                  "type": "input",
                  "updateQueue": null,
                },
                "stateNode": <svg
                  class="topologyDiagram"
                />,
                "tag": 5,
                "type": "svg",
                "updateQueue": null,
              },
              "effectTag": 128,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <svg
                    className="topologyDiagram"
                  />,
                  <input
                    alt="zoom-in"
                    className="zoom-in"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-out"
                    className="zoom-out"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />,
                  <input
                    alt="zoom-target"
                    className="zoom-target"
                    onClick={[Function]}
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />,
                ],
                "className": "topologyDiagramContainer",
              },
              "ref": [Function],
              "return": [Circular],
              "sibling": null,
              "stateNode": <div
                class="topologyDiagramContainer"
              >
                <svg
                  class="topologyDiagram"
                />
                <input
                  alt="zoom-in"
                  class="zoom-in"
                  src="undefined/graphics/zoom-in.svg"
                  type="image"
                />
                <input
                  alt="zoom-out"
                  class="zoom-out"
                  src="undefined/graphics/zoom-out.svg"
                  type="image"
                />
                <input
                  alt="zoom-target"
                  class="zoom-target"
                  src="undefined/graphics/zoom-center.svg"
                  type="image"
                />
              </div>,
              "tag": 5,
              "type": "div",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "clusters": Array [
                  Object {
                    "id": "this_is_id",
                    "name": "name",
                  },
                ],
                "links": Array [
                  Object {
                    "label": "link",
                    "source": 2,
                    "target": 3,
                    "type": "link",
                  },
                ],
                "nodes": Array [
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "5b0ef443663e4b001bb7e198",
                    "name": "toronto",
                    "namespace": null,
                    "topology": "cluster",
                    "type": "cluster",
                    "uid": "toronto",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "2",
                    "name": "2",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "2",
                  },
                  Object {
                    "__typename": "Resource",
                    "cluster": null,
                    "id": "3",
                    "name": "3",
                    "namespace": null,
                    "topology": "service",
                    "type": "service",
                    "uid": "3",
                  },
                ],
                "onSelectedNodeChange": [MockFunction],
                "selectedNodeId": undefined,
                "status": "DONE",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="topologyDiagramContainer"
                    >
                      <svg
                        class="topologyDiagram"
                      />
                      <input
                        alt="zoom-in"
                        class="zoom-in"
                        src="undefined/graphics/zoom-in.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />
                      <input
                        alt="zoom-target"
                        class="zoom-target"
                        src="undefined/graphics/zoom-center.svg"
                        type="image"
                      />
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "clusters": Array [
                              Object {
                                "id": "this_is_id",
                                "name": "name",
                              },
                            ],
                            "links": Array [
                              Object {
                                "label": "link",
                                "source": 2,
                                "target": 3,
                                "type": "link",
                              },
                            ],
                            "nodes": Array [
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "5b0ef443663e4b001bb7e198",
                                "name": "toronto",
                                "namespace": null,
                                "topology": "cluster",
                                "type": "cluster",
                                "uid": "toronto",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "2",
                                "name": "2",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "2",
                              },
                              Object {
                                "__typename": "Resource",
                                "cluster": null,
                                "id": "3",
                                "name": "3",
                                "namespace": null,
                                "topology": "service",
                                "type": "service",
                                "uid": "3",
                              },
                            ],
                            "onSelectedNodeChange": [MockFunction],
                            "selectedNodeId": undefined,
                            "status": "DONE",
                          }
                        }
                      />,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugID": 6,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 7,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": "topologyDiagram",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": "topologyDiagram",
                  },
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 8,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "zoom-in",
                      "className": "zoom-in",
                      "onClick": [Function],
                      "src": "undefined/graphics/zoom-in.svg",
                      "type": "image",
                    },
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 9,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "zoom-out",
                        "className": "zoom-out",
                        "onClick": [Function],
                        "src": "undefined/graphics/zoom-out.svg",
                        "type": "image",
                      },
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 10,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "zoom-target",
                          "className": "zoom-target",
                          "onClick": [Function],
                          "src": "undefined/graphics/zoom-center.svg",
                          "type": "image",
                        },
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <input
                          alt="zoom-target"
                          class="zoom-target"
                          src="undefined/graphics/zoom-center.svg"
                          type="image"
                        />,
                        "tag": 5,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        alt="zoom-out"
                        class="zoom-out"
                        src="undefined/graphics/zoom-out.svg"
                        type="image"
                      />,
                      "tag": 5,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    "tag": 5,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <svg
                    class="topologyDiagram"
                  />,
                  "tag": 5,
                  "type": "svg",
                  "updateQueue": null,
                },
                "effectTag": 128,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <svg
                      className="topologyDiagram"
                    />,
                    <input
                      alt="zoom-in"
                      className="zoom-in"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-out"
                      className="zoom-out"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />,
                    <input
                      alt="zoom-target"
                      className="zoom-target"
                      onClick={[Function]}
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />,
                  ],
                  "className": "topologyDiagramContainer",
                },
                "ref": [Function],
                "return": [Circular],
                "sibling": null,
                "stateNode": <div
                  class="topologyDiagramContainer"
                >
                  <svg
                    class="topologyDiagram"
                  />
                  <input
                    alt="zoom-in"
                    class="zoom-in"
                    src="undefined/graphics/zoom-in.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-out"
                    class="zoom-out"
                    src="undefined/graphics/zoom-out.svg"
                    type="image"
                  />
                  <input
                    alt="zoom-target"
                    class="zoom-target"
                    src="undefined/graphics/zoom-center.svg"
                    type="image"
                  />
                </div>,
                "tag": 5,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "clusters": Array [
                        Object {
                          "id": "this_is_id",
                          "name": "name",
                        },
                      ],
                      "links": Array [
                        Object {
                          "label": "link",
                          "source": 2,
                          "target": 3,
                          "type": "link",
                        },
                      ],
                      "nodes": Array [
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "5b0ef443663e4b001bb7e198",
                          "name": "toronto",
                          "namespace": null,
                          "topology": "cluster",
                          "type": "cluster",
                          "uid": "toronto",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "2",
                          "name": "2",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "2",
                        },
                        Object {
                          "__typename": "Resource",
                          "cluster": null,
                          "id": "3",
                          "name": "3",
                          "namespace": null,
                          "topology": "service",
                          "type": "service",
                          "uid": "3",
                        },
                      ],
                      "onSelectedNodeChange": [MockFunction],
                      "selectedNodeId": undefined,
                      "status": "DONE",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="topologyDiagramContainer"
                  >
                    <svg
                      class="topologyDiagram"
                    />
                    <input
                      alt="zoom-in"
                      class="zoom-in"
                      src="undefined/graphics/zoom-in.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-out"
                      class="zoom-out"
                      src="undefined/graphics/zoom-out.svg"
                      type="image"
                    />
                    <input
                      alt="zoom-target"
                      class="zoom-target"
                      src="undefined/graphics/zoom-center.svg"
                      type="image"
                    />
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "clusters": Array [
                          Object {
                            "id": "this_is_id",
                            "name": "name",
                          },
                        ],
                        "links": Array [
                          Object {
                            "label": "link",
                            "source": 2,
                            "target": 3,
                            "type": "link",
                          },
                        ],
                        "nodes": Array [
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "5b0ef443663e4b001bb7e198",
                            "name": "toronto",
                            "namespace": null,
                            "topology": "cluster",
                            "type": "cluster",
                            "uid": "toronto",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "2",
                            "name": "2",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "2",
                          },
                          Object {
                            "__typename": "Resource",
                            "cluster": null,
                            "id": "3",
                            "name": "3",
                            "namespace": null,
                            "topology": "service",
                            "type": "service",
                            "uid": "3",
                          },
                        ],
                        "onSelectedNodeChange": [MockFunction],
                        "selectedNodeId": undefined,
                        "status": "DONE",
                      }
                    }
                  />,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "clusters": Array [
                    Object {
                      "id": "this_is_id",
                      "name": "name",
                    },
                  ],
                  "links": Array [
                    Object {
                      "label": "link",
                      "source": 2,
                      "target": 3,
                      "type": "link",
                    },
                  ],
                  "nodes": Array [
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "5b0ef443663e4b001bb7e198",
                      "name": "toronto",
                      "namespace": null,
                      "topology": "cluster",
                      "type": "cluster",
                      "uid": "toronto",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "2",
                      "name": "2",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "2",
                    },
                    Object {
                      "__typename": "Resource",
                      "cluster": null,
                      "id": "3",
                      "name": "3",
                      "namespace": null,
                      "topology": "service",
                      "type": "service",
                      "uid": "3",
                    },
                  ],
                  "onSelectedNodeChange": [MockFunction],
                  "selectedNodeId": undefined,
                  "status": "DONE",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "containerRef": <div
          class="topologyDiagramContainer"
        >
          <svg
            class="topologyDiagram"
          />
          <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />
          <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />
          <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />
        </div>,
        "context": Object {},
        "generateDiagram": [Function],
        "handleNodeClick": [Function],
        "handleTarget": [Function],
        "handleZoomIn": [Function],
        "handleZoomOut": [Function],
        "props": Object {
          "clusters": Array [
            Object {
              "id": "this_is_id",
              "name": "name",
            },
          ],
          "links": Array [
            Object {
              "label": "link",
              "source": 2,
              "target": 3,
              "type": "link",
            },
          ],
          "nodes": Array [
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "5b0ef443663e4b001bb7e198",
              "name": "toronto",
              "namespace": null,
              "topology": "cluster",
              "type": "cluster",
              "uid": "toronto",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "2",
              "name": "2",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "2",
            },
            Object {
              "__typename": "Resource",
              "cluster": null,
              "id": "3",
              "name": "3",
              "namespace": null,
              "topology": "service",
              "type": "service",
              "uid": "3",
            },
          ],
          "onSelectedNodeChange": [MockFunction],
          "selectedNodeId": undefined,
          "status": "DONE",
        },
        "refs": Object {},
        "setContainerRef": [Function],
        "simulationHelper": SimulationHelper {
          "createSimulation": [Function],
          "getSimulation": [Function],
          "stopSimulations": [Function],
        },
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "clusters": Array [
          Object {
            "id": "this_is_id",
            "name": "name",
          },
        ],
        "links": Array [
          Object {
            "label": "link",
            "source": 2,
            "target": 3,
            "type": "link",
          },
        ],
        "nodes": Array [
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "5b0ef443663e4b001bb7e198",
            "name": "toronto",
            "namespace": null,
            "topology": "cluster",
            "type": "cluster",
            "uid": "toronto",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "2",
            "name": "2",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "2",
          },
          Object {
            "__typename": "Resource",
            "cluster": null,
            "id": "3",
            "name": "3",
            "namespace": null,
            "topology": "service",
            "type": "service",
            "uid": "3",
          },
        ],
        "onSelectedNodeChange": [MockFunction],
        "selectedNodeId": undefined,
        "status": "DONE",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="topologyDiagramContainer"
        >
          <svg
            class="topologyDiagram"
          />
          <input
            alt="zoom-in"
            class="zoom-in"
            src="undefined/graphics/zoom-in.svg"
            type="image"
          />
          <input
            alt="zoom-out"
            class="zoom-out"
            src="undefined/graphics/zoom-out.svg"
            type="image"
          />
          <input
            alt="zoom-target"
            class="zoom-target"
            src="undefined/graphics/zoom-center.svg"
            type="image"
          />
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <svg
              className="topologyDiagram"
            />,
            <input
              alt="zoom-in"
              className="zoom-in"
              onClick={[Function]}
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />,
            <input
              alt="zoom-out"
              className="zoom-out"
              onClick={[Function]}
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />,
            <input
              alt="zoom-target"
              className="zoom-target"
              onClick={[Function]}
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />,
          ],
          "className": "topologyDiagramContainer",
        },
        "ref": [Function],
        "rendered": Array [
          Object {
            "instance": <svg
              class="topologyDiagram"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "topologyDiagram",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "svg",
          },
          Object {
            "instance": <input
              alt="zoom-in"
              class="zoom-in"
              src="undefined/graphics/zoom-in.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-in",
              "className": "zoom-in",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-in.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <input
              alt="zoom-out"
              class="zoom-out"
              src="undefined/graphics/zoom-out.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-out",
              "className": "zoom-out",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-out.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <input
              alt="zoom-target"
              class="zoom-target"
              src="undefined/graphics/zoom-center.svg"
              type="image"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "zoom-target",
              "className": "zoom-target",
              "onClick": [Function],
              "src": "undefined/graphics/zoom-center.svg",
              "type": "image",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
