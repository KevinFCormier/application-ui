// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditorBar components default 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorBar
    exceptions={Array []}
    gotoEditorLine={[MockFunction]}
    handleEditorCommand={[MockFunction]}
    handleSearchChange={[MockFunction]}
    hasRedo={false}
    hasUndo={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="editor-bar-title"
        >
          YAML
        </div>,
        <div
          className="editor-bar-toolbar"
        >
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "restore",
                  "disabled": true,
                  "tooltip": "Reset",
                }
              }
              command="restore"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "undo",
                  "disabled": true,
                  "icon": "undo",
                  "tooltip": "Undo",
                }
              }
              command="undo"
              handleClick={[Function]}
            />
            <EditorButton
              button={
                Object {
                  "command": "redo",
                  "disabled": true,
                  "icon": "redo",
                  "tooltip": "Redo",
                }
              }
              command="redo"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <div
              aria-label="Find"
              className="editor-bar-search"
              id="Find"
              role="region"
            >
              <Search
                aria-label="Find"
                id="template-editor-search-undefined"
                labelText=""
                light={false}
                onChange={[Function]}
                placeHolderText="Find"
                small={true}
                spellCheck={false}
                type="text"
              />
              <EditorButton
                button={
                  Object {
                    "command": "previous",
                    "disabled": true,
                    "icon": "previous",
                    "tooltip": "Previous",
                  }
                }
                command="previous"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "next",
                    "disabled": true,
                    "icon": "next",
                    "tooltip": "Next",
                  }
                }
                command="next"
                handleClick={[Function]}
              />
            </div>
          </div>
          <div
            className="editor-bar-section diagram-collapse-button"
          >
            <EditorButton
              button={
                Object {
                  "command": "close",
                  "icon": "close",
                  "tooltip": undefined,
                }
              }
              command="close"
              handleClick={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "editor-bar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "YAML",
          "className": "editor-bar-title",
        },
        "ref": null,
        "rendered": "YAML",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>,
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>,
          ],
          "className": "editor-bar-toolbar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "restore",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  },
                  "command": "restore",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />,
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "undo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  },
                  "command": "undo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "redo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  },
                  "command": "redo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>,
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Find",
                "children": Array [
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />,
                  Array [
                    <EditorButton
                      button={
                        Object {
                          "command": "previous",
                          "disabled": true,
                          "icon": "previous",
                          "tooltip": "Previous",
                        }
                      }
                      command="previous"
                      handleClick={[Function]}
                    />,
                    <EditorButton
                      button={
                        Object {
                          "command": "next",
                          "disabled": true,
                          "icon": "next",
                          "tooltip": "Next",
                        }
                      }
                      command="next"
                      handleClick={[Function]}
                    />,
                  ],
                ],
                "className": "editor-bar-search",
                "id": "Find",
                "role": "region",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "aria-label": "Find",
                    "id": "template-editor-search-undefined",
                    "labelText": "",
                    "light": false,
                    "onChange": [Function],
                    "placeHolderText": "Find",
                    "small": true,
                    "spellCheck": false,
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "previous",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    },
                    "command": "previous",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "next",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    },
                    "command": "next",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section diagram-collapse-button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "close",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  },
                  "command": "close",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="editor-bar-title"
          >
            YAML
          </div>,
          <div
            className="editor-bar-toolbar"
          >
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "editor-bar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "YAML",
            "className": "editor-bar-title",
          },
          "ref": null,
          "rendered": "YAML",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>
              </div>,
              <div
                className="editor-bar-section diagram-collapse-button"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />
              </div>,
            ],
            "className": "editor-bar-toolbar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "restore",
                        "disabled": true,
                        "tooltip": "Reset",
                      }
                    }
                    command="restore"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "restore",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    },
                    "command": "restore",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "undo",
                        "disabled": true,
                        "icon": "undo",
                        "tooltip": "Undo",
                      }
                    }
                    command="undo"
                    handleClick={[Function]}
                  />,
                  <EditorButton
                    button={
                      Object {
                        "command": "redo",
                        "disabled": true,
                        "icon": "redo",
                        "tooltip": "Redo",
                      }
                    }
                    command="redo"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "undo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    },
                    "command": "undo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "redo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    },
                    "command": "redo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>,
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Find",
                  "children": Array [
                    <Search
                      aria-label="Find"
                      id="template-editor-search-undefined"
                      labelText=""
                      light={false}
                      onChange={[Function]}
                      placeHolderText="Find"
                      small={true}
                      spellCheck={false}
                      type="text"
                    />,
                    Array [
                      <EditorButton
                        button={
                          Object {
                            "command": "previous",
                            "disabled": true,
                            "icon": "previous",
                            "tooltip": "Previous",
                          }
                        }
                        command="previous"
                        handleClick={[Function]}
                      />,
                      <EditorButton
                        button={
                          Object {
                            "command": "next",
                            "disabled": true,
                            "icon": "next",
                            "tooltip": "Next",
                          }
                        }
                        command="next"
                        handleClick={[Function]}
                      />,
                    ],
                  ],
                  "className": "editor-bar-search",
                  "id": "Find",
                  "role": "region",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "aria-label": "Find",
                      "id": "template-editor-search-undefined",
                      "labelText": "",
                      "light": false,
                      "onChange": [Function],
                      "placeHolderText": "Find",
                      "small": true,
                      "spellCheck": false,
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "previous",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      },
                      "command": "previous",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "next",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      },
                      "command": "next",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "close",
                        "icon": "close",
                        "tooltip": undefined,
                      }
                    }
                    command="close"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section diagram-collapse-button",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "close",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    },
                    "command": "close",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`EditorBar components empty 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorBar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="editor-bar-title"
        >
          YAML
        </div>,
        <div
          className="editor-bar-toolbar"
        >
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "restore",
                  "disabled": true,
                  "tooltip": "Reset",
                }
              }
              command="restore"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "undo",
                  "disabled": true,
                  "icon": "undo",
                  "tooltip": "Undo",
                }
              }
              command="undo"
              handleClick={[Function]}
            />
            <EditorButton
              button={
                Object {
                  "command": "redo",
                  "disabled": true,
                  "icon": "redo",
                  "tooltip": "Redo",
                }
              }
              command="redo"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <div
              aria-label="Find"
              className="editor-bar-search"
              id="Find"
              role="region"
            >
              <Search
                aria-label="Find"
                id="template-editor-search-undefined"
                labelText=""
                light={false}
                onChange={[Function]}
                placeHolderText="Find"
                small={true}
                spellCheck={false}
                type="text"
              />
              <EditorButton
                button={
                  Object {
                    "command": "previous",
                    "disabled": true,
                    "icon": "previous",
                    "tooltip": "Previous",
                  }
                }
                command="previous"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "next",
                    "disabled": true,
                    "icon": "next",
                    "tooltip": "Next",
                  }
                }
                command="next"
                handleClick={[Function]}
              />
            </div>
          </div>
          <div
            className="editor-bar-section diagram-collapse-button"
          >
            <EditorButton
              button={
                Object {
                  "command": "close",
                  "icon": "close",
                  "tooltip": undefined,
                }
              }
              command="close"
              handleClick={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "editor-bar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "YAML",
          "className": "editor-bar-title",
        },
        "ref": null,
        "rendered": "YAML",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>,
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>,
          ],
          "className": "editor-bar-toolbar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "restore",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  },
                  "command": "restore",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />,
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "undo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  },
                  "command": "undo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "redo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  },
                  "command": "redo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>,
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Find",
                "children": Array [
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />,
                  Array [
                    <EditorButton
                      button={
                        Object {
                          "command": "previous",
                          "disabled": true,
                          "icon": "previous",
                          "tooltip": "Previous",
                        }
                      }
                      command="previous"
                      handleClick={[Function]}
                    />,
                    <EditorButton
                      button={
                        Object {
                          "command": "next",
                          "disabled": true,
                          "icon": "next",
                          "tooltip": "Next",
                        }
                      }
                      command="next"
                      handleClick={[Function]}
                    />,
                  ],
                ],
                "className": "editor-bar-search",
                "id": "Find",
                "role": "region",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "aria-label": "Find",
                    "id": "template-editor-search-undefined",
                    "labelText": "",
                    "light": false,
                    "onChange": [Function],
                    "placeHolderText": "Find",
                    "small": true,
                    "spellCheck": false,
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "previous",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    },
                    "command": "previous",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "next",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    },
                    "command": "next",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section diagram-collapse-button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "close",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  },
                  "command": "close",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="editor-bar-title"
          >
            YAML
          </div>,
          <div
            className="editor-bar-toolbar"
          >
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": true,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": true,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": true,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "editor-bar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "YAML",
            "className": "editor-bar-title",
          },
          "ref": null,
          "rendered": "YAML",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>
              </div>,
              <div
                className="editor-bar-section diagram-collapse-button"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />
              </div>,
            ],
            "className": "editor-bar-toolbar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "restore",
                        "disabled": true,
                        "tooltip": "Reset",
                      }
                    }
                    command="restore"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "restore",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "restore",
                      "disabled": true,
                      "tooltip": "Reset",
                    },
                    "command": "restore",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "undo",
                        "disabled": true,
                        "icon": "undo",
                        "tooltip": "Undo",
                      }
                    }
                    command="undo"
                    handleClick={[Function]}
                  />,
                  <EditorButton
                    button={
                      Object {
                        "command": "redo",
                        "disabled": true,
                        "icon": "redo",
                        "tooltip": "Redo",
                      }
                    }
                    command="redo"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "undo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "undo",
                      "disabled": true,
                      "icon": "undo",
                      "tooltip": "Undo",
                    },
                    "command": "undo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "redo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "redo",
                      "disabled": true,
                      "icon": "redo",
                      "tooltip": "Redo",
                    },
                    "command": "redo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>,
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Find",
                  "children": Array [
                    <Search
                      aria-label="Find"
                      id="template-editor-search-undefined"
                      labelText=""
                      light={false}
                      onChange={[Function]}
                      placeHolderText="Find"
                      small={true}
                      spellCheck={false}
                      type="text"
                    />,
                    Array [
                      <EditorButton
                        button={
                          Object {
                            "command": "previous",
                            "disabled": true,
                            "icon": "previous",
                            "tooltip": "Previous",
                          }
                        }
                        command="previous"
                        handleClick={[Function]}
                      />,
                      <EditorButton
                        button={
                          Object {
                            "command": "next",
                            "disabled": true,
                            "icon": "next",
                            "tooltip": "Next",
                          }
                        }
                        command="next"
                        handleClick={[Function]}
                      />,
                    ],
                  ],
                  "className": "editor-bar-search",
                  "id": "Find",
                  "role": "region",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "aria-label": "Find",
                      "id": "template-editor-search-undefined",
                      "labelText": "",
                      "light": false,
                      "onChange": [Function],
                      "placeHolderText": "Find",
                      "small": true,
                      "spellCheck": false,
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "previous",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      },
                      "command": "previous",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "next",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      },
                      "command": "next",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "close",
                        "icon": "close",
                        "tooltip": undefined,
                      }
                    }
                    command="close"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section diagram-collapse-button",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "close",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    },
                    "command": "close",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`EditorBar components has exception 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorBar
    exceptions={
      Array [
        Object {
          "text": "testing with a very long message with 64 characters weeeeeeeeeeeee",
          "type": "error",
        },
      ]
    }
    gotoEditorLine={[MockFunction]}
    handleEditorCommand={[MockFunction]}
    handleSearchChange={[MockFunction]}
    hasRedo={true}
    hasUndo={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="editor-bar-title"
        >
          YAML
        </div>,
        <div
          className="editor-bar-toolbar"
        >
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "restore",
                  "disabled": false,
                  "tooltip": "Reset",
                }
              }
              command="restore"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <EditorButton
              button={
                Object {
                  "command": "undo",
                  "disabled": false,
                  "icon": "undo",
                  "tooltip": "Undo",
                }
              }
              command="undo"
              handleClick={[Function]}
            />
            <EditorButton
              button={
                Object {
                  "command": "redo",
                  "disabled": false,
                  "icon": "redo",
                  "tooltip": "Redo",
                }
              }
              command="redo"
              handleClick={[Function]}
            />
          </div>
          <div
            className="editor-bar-section"
          >
            <div
              aria-label="Find"
              className="editor-bar-search"
              id="Find"
              role="region"
            >
              <Search
                aria-label="Find"
                id="template-editor-search-undefined"
                labelText=""
                light={false}
                onChange={[Function]}
                placeHolderText="Find"
                small={true}
                spellCheck={false}
                type="text"
              />
              <EditorButton
                button={
                  Object {
                    "command": "previous",
                    "disabled": true,
                    "icon": "previous",
                    "tooltip": "Previous",
                  }
                }
                command="previous"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "next",
                    "disabled": true,
                    "icon": "next",
                    "tooltip": "Next",
                  }
                }
                command="next"
                handleClick={[Function]}
              />
            </div>
          </div>
          <div
            className="editor-bar-section diagram-collapse-button"
          >
            <EditorButton
              button={
                Object {
                  "command": "close",
                  "icon": "close",
                  "tooltip": undefined,
                }
              }
              command="close"
              handleClick={[Function]}
            />
          </div>
        </div>,
      ],
      "className": "editor-bar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "YAML",
          "className": "editor-bar-title",
        },
        "ref": null,
        "rendered": "YAML",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": false,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": false,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": false,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>,
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>,
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>,
          ],
          "className": "editor-bar-toolbar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": false,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "restore",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "restore",
                    "disabled": false,
                    "tooltip": "Reset",
                  },
                  "command": "restore",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": false,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />,
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": false,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "undo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "undo",
                    "disabled": false,
                    "icon": "undo",
                    "tooltip": "Undo",
                  },
                  "command": "undo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "redo",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "redo",
                    "disabled": false,
                    "icon": "redo",
                    "tooltip": "Redo",
                  },
                  "command": "redo",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>,
              "className": "editor-bar-section",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Find",
                "children": Array [
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />,
                  Array [
                    <EditorButton
                      button={
                        Object {
                          "command": "previous",
                          "disabled": true,
                          "icon": "previous",
                          "tooltip": "Previous",
                        }
                      }
                      command="previous"
                      handleClick={[Function]}
                    />,
                    <EditorButton
                      button={
                        Object {
                          "command": "next",
                          "disabled": true,
                          "icon": "next",
                          "tooltip": "Next",
                        }
                      }
                      command="next"
                      handleClick={[Function]}
                    />,
                  ],
                ],
                "className": "editor-bar-search",
                "id": "Find",
                "role": "region",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "aria-label": "Find",
                    "id": "template-editor-search-undefined",
                    "labelText": "",
                    "light": false,
                    "onChange": [Function],
                    "placeHolderText": "Find",
                    "small": true,
                    "spellCheck": false,
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "previous",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    },
                    "command": "previous",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "next",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    },
                    "command": "next",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />,
              ],
              "className": "editor-bar-section diagram-collapse-button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "close",
                "nodeType": "class",
                "props": Object {
                  "button": Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  },
                  "command": "close",
                  "handleClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="editor-bar-title"
          >
            YAML
          </div>,
          <div
            className="editor-bar-toolbar"
          >
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "restore",
                    "disabled": false,
                    "tooltip": "Reset",
                  }
                }
                command="restore"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <EditorButton
                button={
                  Object {
                    "command": "undo",
                    "disabled": false,
                    "icon": "undo",
                    "tooltip": "Undo",
                  }
                }
                command="undo"
                handleClick={[Function]}
              />
              <EditorButton
                button={
                  Object {
                    "command": "redo",
                    "disabled": false,
                    "icon": "redo",
                    "tooltip": "Redo",
                  }
                }
                command="redo"
                handleClick={[Function]}
              />
            </div>
            <div
              className="editor-bar-section"
            >
              <div
                aria-label="Find"
                className="editor-bar-search"
                id="Find"
                role="region"
              >
                <Search
                  aria-label="Find"
                  id="template-editor-search-undefined"
                  labelText=""
                  light={false}
                  onChange={[Function]}
                  placeHolderText="Find"
                  small={true}
                  spellCheck={false}
                  type="text"
                />
                <EditorButton
                  button={
                    Object {
                      "command": "previous",
                      "disabled": true,
                      "icon": "previous",
                      "tooltip": "Previous",
                    }
                  }
                  command="previous"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "next",
                      "disabled": true,
                      "icon": "next",
                      "tooltip": "Next",
                    }
                  }
                  command="next"
                  handleClick={[Function]}
                />
              </div>
            </div>
            <div
              className="editor-bar-section diagram-collapse-button"
            >
              <EditorButton
                button={
                  Object {
                    "command": "close",
                    "icon": "close",
                    "tooltip": undefined,
                  }
                }
                command="close"
                handleClick={[Function]}
              />
            </div>
          </div>,
        ],
        "className": "editor-bar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "YAML",
            "className": "editor-bar-title",
          },
          "ref": null,
          "rendered": "YAML",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "restore",
                      "disabled": false,
                      "tooltip": "Reset",
                    }
                  }
                  command="restore"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "undo",
                      "disabled": false,
                      "icon": "undo",
                      "tooltip": "Undo",
                    }
                  }
                  command="undo"
                  handleClick={[Function]}
                />
                <EditorButton
                  button={
                    Object {
                      "command": "redo",
                      "disabled": false,
                      "icon": "redo",
                      "tooltip": "Redo",
                    }
                  }
                  command="redo"
                  handleClick={[Function]}
                />
              </div>,
              <div
                className="editor-bar-section"
              >
                <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>
              </div>,
              <div
                className="editor-bar-section diagram-collapse-button"
              >
                <EditorButton
                  button={
                    Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    }
                  }
                  command="close"
                  handleClick={[Function]}
                />
              </div>,
            ],
            "className": "editor-bar-toolbar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "restore",
                        "disabled": false,
                        "tooltip": "Reset",
                      }
                    }
                    command="restore"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "restore",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "restore",
                      "disabled": false,
                      "tooltip": "Reset",
                    },
                    "command": "restore",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "undo",
                        "disabled": false,
                        "icon": "undo",
                        "tooltip": "Undo",
                      }
                    }
                    command="undo"
                    handleClick={[Function]}
                  />,
                  <EditorButton
                    button={
                      Object {
                        "command": "redo",
                        "disabled": false,
                        "icon": "redo",
                        "tooltip": "Redo",
                      }
                    }
                    command="redo"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "undo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "undo",
                      "disabled": false,
                      "icon": "undo",
                      "tooltip": "Undo",
                    },
                    "command": "undo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "redo",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "redo",
                      "disabled": false,
                      "icon": "redo",
                      "tooltip": "Redo",
                    },
                    "command": "redo",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  aria-label="Find"
                  className="editor-bar-search"
                  id="Find"
                  role="region"
                >
                  <Search
                    aria-label="Find"
                    id="template-editor-search-undefined"
                    labelText=""
                    light={false}
                    onChange={[Function]}
                    placeHolderText="Find"
                    small={true}
                    spellCheck={false}
                    type="text"
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      }
                    }
                    command="previous"
                    handleClick={[Function]}
                  />
                  <EditorButton
                    button={
                      Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      }
                    }
                    command="next"
                    handleClick={[Function]}
                  />
                </div>,
                "className": "editor-bar-section",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-label": "Find",
                  "children": Array [
                    <Search
                      aria-label="Find"
                      id="template-editor-search-undefined"
                      labelText=""
                      light={false}
                      onChange={[Function]}
                      placeHolderText="Find"
                      small={true}
                      spellCheck={false}
                      type="text"
                    />,
                    Array [
                      <EditorButton
                        button={
                          Object {
                            "command": "previous",
                            "disabled": true,
                            "icon": "previous",
                            "tooltip": "Previous",
                          }
                        }
                        command="previous"
                        handleClick={[Function]}
                      />,
                      <EditorButton
                        button={
                          Object {
                            "command": "next",
                            "disabled": true,
                            "icon": "next",
                            "tooltip": "Next",
                          }
                        }
                        command="next"
                        handleClick={[Function]}
                      />,
                    ],
                  ],
                  "className": "editor-bar-search",
                  "id": "Find",
                  "role": "region",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "aria-label": "Find",
                      "id": "template-editor-search-undefined",
                      "labelText": "",
                      "light": false,
                      "onChange": [Function],
                      "placeHolderText": "Find",
                      "small": true,
                      "spellCheck": false,
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "previous",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "previous",
                        "disabled": true,
                        "icon": "previous",
                        "tooltip": "Previous",
                      },
                      "command": "previous",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "next",
                    "nodeType": "class",
                    "props": Object {
                      "button": Object {
                        "command": "next",
                        "disabled": true,
                        "icon": "next",
                        "tooltip": "Next",
                      },
                      "command": "next",
                      "handleClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <EditorButton
                    button={
                      Object {
                        "command": "close",
                        "icon": "close",
                        "tooltip": undefined,
                      }
                    }
                    command="close"
                    handleClick={[Function]}
                  />,
                ],
                "className": "editor-bar-section diagram-collapse-button",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "close",
                  "nodeType": "class",
                  "props": Object {
                    "button": Object {
                      "command": "close",
                      "icon": "close",
                      "tooltip": undefined,
                    },
                    "command": "close",
                    "handleClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
